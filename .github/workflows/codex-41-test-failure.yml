name: Codex 41 – Failing Test Recovery
on:
  schedule:
    - cron: "0 * * * *" # every hour
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  check_tests:
    runs-on: ubuntu-latest
    outputs:
      tests_failed: ${{ steps.run_tests.outputs.failed }}
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run test suite
        id: run_tests
        run: |
          set +e
          npm test
          status=$?
          if [ "$status" -ne 0 ]; then
            echo "Test suite exited with $status"
            echo "failed=true" >> "$GITHUB_OUTPUT"
          else
            echo "Test suite passed"
            echo "failed=false" >> "$GITHUB_OUTPUT"
          fi
          exit 0

  run:
    needs: check_tests
    if: ${{ needs.check_tests.outputs.tests_failed == 'true' }}
    uses: ./.github/workflows/_codex-open-pr-and-ping.yml
    secrets: inherit
    with:
      pr_title: "Codex: Recover Failing Test"
      pr_body: "Seed PR for Codex to diagnose a failing test, repair the underlying issue, and re-verify."
      prompt: >
        There is at least one failing unit test in the codebase. Start by running the
        full automated test suite (npm test). Then, identify a single failing test
        (or the smallest cluster of related failures with a shared root cause).
        Focus on isolating and fixing the smallest piece of missing or broken
        behavior within that failure. If a golden fixture encodes multiple
        formatting rules, choose one regression to address—implement the necessary
        production fix or feature for that specific case, leave the rest untouched,
        and document any remaining gaps. Never modify the existing golden files in
        src/plugin/tests/*.gml.
        If your fix targets only part of a failing test—meaning the broader test
        will still fail afterward—add a new, focused test (unit or integration)
        that explicitly demonstrates the corrected behavior. Even if the original
        fixture test continues to fail, your new targeted test should now pass. Re-
        run npm test (or the relevant subset) to ensure all previously passing suites
        remain green and that your new test passes. Stop after delivering that
        single verified improvement; do not pursue additional failures in the same
        run.
