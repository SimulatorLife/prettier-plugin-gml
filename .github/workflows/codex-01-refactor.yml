name: Codex 01 – Refactor & DRY
on:
  schedule:
    - cron: "0 */3 * * *" # every 3 hours (two runs per 3-hour window via staggered start)
    - cron: "30 1/3 * * *" # offset by 90 minutes for alternating cadence
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run:
    uses: ./.github/workflows/_codex-open-pr-and-ping.yml
    secrets: inherit
    with:
      pr_title: "Codex: Implement refactor to improve DRY-ness and maintainability"
      pr_body: "Seed PR for Codex to implement the intended refactor."
      prompt: >
        The long-term goal is to raise the overall quality and maintainability of the codebase by reducing duplication, modernizing patterns, and reinforcing DRY principles while avoiding unnecessary abstraction. Select one high-impact area (such as a module, file, or recurring pattern) where duplication, verbosity, or outdated constructs can be consolidated or streamlined. In that area, apply targeted improvements—for example: factor out repeated code into a shared helper, re-use an existing helper already defined elsewhere in the project instead of duplicating logic, unify multiple near-identical functions, remove redundant local wrappers already covered by existing utilities, replace verbose step-by-step logic with modern language or framework primitives, collapse repeated configuration blocks into a single source of truth, or merge fragmented logic paths into a clearer unified flow. Avoid style-only edits or large rewrites; focus on a minimal, well-scoped change that demonstrably improves clarity, consistency, or reusability without altering external behavior. Always identify and implement at least one such improvement (however small) to ensure progress toward a more DRY, cohesive codebase.
