name: Codex 23 â€“ Lint Fixes
on:
  schedule:
    - cron: "20 0,12 * * *"  # twice daily at 00:20, 12:20 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run:
    uses: ./.github/workflows/_codex-open-pr-and-ping.yml
    secrets: inherit
    with:
      pr_title: "Codex: Lint Fixes"
      pr_body: "Seed PR for Codex to refactor and fix lint warnings and errors."
      prompt: >
        Run `npm run lint` and parse its output. Identify all ESLint warnings and errors, then select
        one single instance to fix. Prioritize errors over warnings, and choose a target that is 
        specific to a targeted location: either a single file or function. Your goal is to make one 
        minimal, correct, and safe code change that resolves that particular ESLint rule violation 
        without introducing new ones. The fix should focus only on that file and function, not on 
        unrelated code or project-wide formatting. Do not refactor, reformat, or modify configuration 
        files unless absolutely required by the rule itself. When selecting which issue to fix, 
        prefer one that is deterministic, locally fixable, and least likely to alter runtime behavior. 
        Once selected, explain briefly what the problem is and why your fix satisfies the ESLint rule.
        After applying the fix, re-run npm run lint to confirm that the specific issue is resolved
        and that the total number of warnings/errors has decreased. If the change affects logic,
        include a short explanation of why behavior is preserved. Provide the patch diff for the
        change, the before-and-after lint summary, and a concise commit message describing the rule
        fixed and file/function updated. Never fix more than one lint issue per run, never disable a
        rule globally, and never make stylistic changes beyond the single targeted fix.
